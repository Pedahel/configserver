image: openjdk:14

pipelines:
  branches:
    '{staging}':
      - step:
          name: Maven Build
          image: maven:3.6.3
          caches:
            - maven
          script:
            - bash .bitbucket-pipeline/create-settings.sh
            - mvn -B -s settings.xml clean package
          artifacts:
            - target/**
      - step:
          name: Build and Push Docker Image
          image: google/cloud-sdk:latest
          script:
            - echo $GCLOUD_API_KEYFILE > ~/.gcloud-api-key.json
            - gcloud auth activate-service-account --key-file ~/.gcloud-api-key.json
            - docker login -u _json_key --password-stdin https://$DOCKER_GCR_REPO_URL < ~/.gcloud-api-key.json

            - docker build -t $DOCKER_IMAGE_NAME:${BITBUCKET_COMMIT} .

            - docker tag $DOCKER_IMAGE_NAME:${BITBUCKET_COMMIT} $DOCKER_GCR_REPO_URL/$GCLOUD_PROJECT_ID/$TEAM_NAME/$BITBUCKET_BRANCH/$DOCKER_IMAGE_NAME:${BITBUCKET_COMMIT}

            - docker push $DOCKER_GCR_REPO_URL/$GCLOUD_PROJECT_ID/$TEAM_NAME/$BITBUCKET_BRANCH/$DOCKER_IMAGE_NAME:${BITBUCKET_COMMIT}

            - gcloud container clusters get-credentials $K8s_CLUSTER_NAME --zone=$GCLOUD_ZONE --project $GCLOUD_PROJECT_ID

            # DEPLOYMENT
            - kubectl set image deployment $K8s_DEPLOYMENT_NAME $K8s_DEPLOYMENT_NAME=$DOCKER_GCR_REPO_URL/$GCLOUD_PROJECT_ID/$TEAM_NAME/$BITBUCKET_BRANCH/$DOCKER_IMAGE_NAME:${BITBUCKET_COMMIT} --record --namespace=$K8S_NAMESPACE_STAGING

    '{master}':
      - step:
          name: Maven Build
          image: maven:3.6.3
          caches:
            - maven
          script:
            - mvn clean package
          artifacts:
            - target/**
      - step:
          name: Build and Push Docker Image
          image: google/cloud-sdk:latest
          script:
            - echo $GCLOUD_API_KEYFILE > ~/.gcloud-api-key.json
            - gcloud auth activate-service-account --key-file ~/.gcloud-api-key.json
            - docker login -u _json_key --password-stdin https://$DOCKER_GCR_REPO_URL < ~/.gcloud-api-key.json

            - sed -i -e "s/--spring.profiles.active=staging/--spring.profiles.active=prod/g" Dockerfile

            - docker build -t $DOCKER_IMAGE_NAME:${BITBUCKET_COMMIT} .

            - docker tag $DOCKER_IMAGE_NAME:${BITBUCKET_COMMIT} $DOCKER_GCR_REPO_URL/$GCLOUD_PROJECT_ID/$TEAM_NAME/$BITBUCKET_BRANCH/$DOCKER_IMAGE_NAME:${BITBUCKET_COMMIT}

            - docker push $DOCKER_GCR_REPO_URL/$GCLOUD_PROJECT_ID/$TEAM_NAME/$BITBUCKET_BRANCH/$DOCKER_IMAGE_NAME:${BITBUCKET_COMMIT}

            - gcloud container clusters get-credentials $K8s_CLUSTER_NAME --zone=$GCLOUD_ZONE --project $GCLOUD_PROJECT_ID

            # DEPLOYMENT
            # - kubectl set image deployment $K8s_DEPLOYMENT_NAME $K8s_DEPLOYMENT_NAME=$DOCKER_GCR_REPO_URL/$GCLOUD_PROJECT_ID/$TEAM_NAME/$BITBUCKET_BRANCH/$DOCKER_IMAGE_NAME:${BITBUCKET_COMMIT} --record --namespace=$K8S_NAMESPACE_PRODUCTION
options:
  docker: true